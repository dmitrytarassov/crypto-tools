{"version":3,"sources":["../../src/polkadot/api/index.ts","../../src/polkadot/api/query/index.ts","../../src/polkadot/api/query/nominationPools/index.ts","../../src/polkadot/api/query/nominationPools/bondedPools.ts","../../src/polkadot/api/query/nominationPools/claimPermissions.ts","../../src/polkadot/api/query/nominationPools/counterForBondedPools.ts","../../src/polkadot/api/query/nominationPools/counterForMetadata.ts","../../src/polkadot/api/query/nominationPools/counterForPoolMembers.ts","../../src/polkadot/api/query/nominationPools/counterForReversePoolIdLookup.ts","../../src/polkadot/api/query/nominationPools/counterForRewardPools.ts","../../src/polkadot/api/query/nominationPools/counterForSubPoolsStorage.ts","../../src/polkadot/api/query/nominationPools/globalMaxCommission.ts","../../src/polkadot/api/query/nominationPools/lastPoolId.ts","../../src/polkadot/api/query/nominationPools/maxPoolMembers.ts","../../src/polkadot/api/query/nominationPools/maxPoolMembersPerPool.ts","../../src/polkadot/api/query/nominationPools/maxPools.ts","../../src/polkadot/api/query/nominationPools/metadata.ts","../../src/polkadot/api/query/nominationPools/minCreateBond.ts","../../src/polkadot/api/query/nominationPools/minJoinBond.ts","../../src/polkadot/api/query/helpers/palletVersionBase.ts","../../src/polkadot/api/query/nominationPools/palletVersion.ts","../../src/polkadot/api/query/nominationPools/poolMembers.ts","../../src/polkadot/api/query/nominationPools/reversePoolIdLookup.ts","../../src/polkadot/api/query/nominationPools/rewardPools.ts","../../src/polkadot/api/query/nominationPools/subPoolsStorage.ts","../../src/polkadot/api/query/nominationPools/totalValueLocked.ts","../../src/polkadot/api/query/proxy/index.ts","../../src/polkadot/api/query/proxy/proxies.ts","../../src/polkadot/api/query/proxy/palletVersion.ts","../../src/polkadot/api/query/system/index.ts","../../src/polkadot/api/query/system/account.ts","../../src/polkadot/api/query/system/accountNextIndex.ts","../../src/polkadot/api/query/system/palletVersion.ts","../../src/polkadot/api/query/staking/index.ts","../../src/polkadot/api/query/staking/activeEra.ts","../../src/polkadot/api/query/staking/bonded.ts","../../src/polkadot/api/query/staking/erasRewardPoints.ts","../../src/polkadot/api/query/staking/erasValidatorReward.ts","../../src/polkadot/api/query/staking/ledger.ts","../../src/polkadot/api/query/staking/nominators.ts","../../src/polkadot/api/query/staking/palletVersion.ts","../../src/polkadot/api/query/staking/validators.ts","../../src/polkadot/account/getLedgerData.ts","../../src/polkadot/account/getAccountData.ts","../../src/polkadot/staking/getController.ts","../../src/polkadot/account/getAccountNonce.ts","../../src/polkadot/staking/getErasRewardPoints.ts","../../src/polkadot/common/polkadotExplorerUrl.ts","../../src/polkadot/staking/getActiveEra.ts","../../src/polkadot/index.ts"],"sourcesContent":["export * as query from \"./query\";\n","export * as nominationPools from \"./nominationPools\";\nexport * as proxy from \"./proxy\";\nexport * as system from \"./system\";\nexport * as staking from \"./staking\";\n","export { bondedPools } from \"./bondedPools\";\nexport { claimPermissions } from \"./claimPermissions\";\nexport { counterForBondedPools } from \"./counterForBondedPools\";\nexport { counterForMetadata } from \"./counterForMetadata\";\nexport { counterForPoolMembers } from \"./counterForPoolMembers\";\nexport { counterForReversePoolIdLookup } from \"./counterForReversePoolIdLookup\";\nexport { counterForRewardPools } from \"./counterForRewardPools\";\nexport { counterForSubPoolsStorage } from \"./counterForSubPoolsStorage\";\nexport { globalMaxCommission } from \"./globalMaxCommission\";\nexport { lastPoolId } from \"./lastPoolId\";\nexport { maxPoolMembers } from \"./maxPoolMembers\";\nexport { maxPoolMembersPerPool } from \"./maxPoolMembersPerPool\";\nexport { maxPools } from \"./maxPools\";\nexport { metadata } from \"./metadata\";\nexport { minCreateBond } from \"./minCreateBond\";\nexport { minJoinBond } from \"./minJoinBond\";\nexport { palletVersion } from \"./palletVersion\";\nexport { poolMembers } from \"./poolMembers\";\nexport { reversePoolIdLookup } from \"./reversePoolIdLookup\";\nexport { rewardPools } from \"./rewardPools\";\nexport { subPoolsStorage } from \"./subPoolsStorage\";\nexport { totalValueLocked } from \"./totalValueLocked\";\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport { BrokenNumberType } from \"../types/BrokenNumberType\";\n\nexport type Nomination_Pools_Bonded_Pools_Json = {\n  commission: {\n    current: [number, string] | null;\n    max: number | null;\n    changeRate: { maxIncrease: number; minDelay: number } | null;\n    throttleFrom: number | null;\n    claimPermission: null; // always null\n  };\n  memberCounter: number;\n  points: BrokenNumberType;\n  roles: {\n    depositor: string;\n    root: string;\n    nominator: string;\n    bouncer: string;\n  };\n  state: \"Open\" | \"Destroying\" | \"Blocked\";\n};\n\nexport async function bondedPools(\n  apiPromise: ApiPromise,\n  poolId: number\n): Promise<Nomination_Pools_Bonded_Pools_Json | null> {\n  const data = await apiPromise.query.nominationPools.bondedPools(poolId);\n\n  return data.toJSON() as any as Nomination_Pools_Bonded_Pools_Json | null;\n}\n\nexport type Nomination_Pools_Bonded_Pools_Entries = [\n  number,\n  Nomination_Pools_Bonded_Pools_Json\n][];\n\nbondedPools.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Bonded_Pools_Entries> {\n  const data = await apiPromise.query.nominationPools.bondedPools.entries();\n\n  const result: Nomination_Pools_Bonded_Pools_Entries = [];\n\n  data.forEach(([poolId, data]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([+poolId.toHuman()[0], data.toHuman()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport { ClaimPermission } from \"./types\";\n\nexport type Nomination_Pools_Claim_Permission_Json = ClaimPermission;\n\nexport async function claimPermissions(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Nomination_Pools_Claim_Permission_Json> {\n  const data = await apiPromise.query.nominationPools.claimPermissions(address);\n\n  return data.toJSON() as any as Nomination_Pools_Claim_Permission_Json;\n}\n\nexport type Nomination_Pools_Claim_Permission_Entries = [\n  string,\n  ClaimPermission\n][];\n\nclaimPermissions.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Claim_Permission_Entries> {\n  const data =\n    await apiPromise.query.nominationPools.claimPermissions.entries();\n\n  const result: Nomination_Pools_Claim_Permission_Entries = [];\n\n  data.forEach(([address, data]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([address.toHuman()[0], data.toJSON()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Counter_For_Bonded_Pools_Json = number;\n\nexport async function counterForBondedPools(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Counter_For_Bonded_Pools_Json> {\n  const data = await apiPromise.query.nominationPools.counterForBondedPools();\n\n  return data.toJSON() as any as Nomination_Pools_Counter_For_Bonded_Pools_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Counter_For_Metadata_Json = number;\n\nexport async function counterForMetadata(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Counter_For_Metadata_Json> {\n  const data = await apiPromise.query.nominationPools.counterForMetadata();\n\n  return data.toJSON() as any as Nomination_Pools_Counter_For_Metadata_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Counter_For_Pool_Members_Json = number;\n\nexport async function counterForPoolMembers(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Counter_For_Pool_Members_Json> {\n  const data = await apiPromise.query.nominationPools.counterForPoolMembers();\n\n  return data.toJSON() as any as Nomination_Pools_Counter_For_Pool_Members_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Counter_For_Reverse_Pool_Id_Lookup_Json = number;\n\nexport async function counterForReversePoolIdLookup(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Counter_For_Reverse_Pool_Id_Lookup_Json> {\n  const data =\n    await apiPromise.query.nominationPools.counterForReversePoolIdLookup();\n\n  return data.toJSON() as any as Nomination_Pools_Counter_For_Reverse_Pool_Id_Lookup_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Counter_For_Reward_Pools_Json = number;\n\nexport async function counterForRewardPools(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Counter_For_Reward_Pools_Json> {\n  const data = await apiPromise.query.nominationPools.counterForRewardPools();\n\n  return data.toJSON() as any as Nomination_Pools_Counter_For_Reward_Pools_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Counter_For_Sub_Pools_Storage_Json = number;\n\nexport async function counterForSubPoolsStorage(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Counter_For_Sub_Pools_Storage_Json> {\n  const data =\n    await apiPromise.query.nominationPools.counterForSubPoolsStorage();\n\n  return data.toJSON() as any as Nomination_Pools_Counter_For_Sub_Pools_Storage_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Global_Max_Commission_Json = number;\n\nexport async function globalMaxCommission(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Global_Max_Commission_Json> {\n  const data = await apiPromise.query.nominationPools.globalMaxCommission();\n\n  return data.toJSON() as any as Nomination_Pools_Global_Max_Commission_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Last_Pool_Id_Json = number;\n\nexport async function lastPoolId(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Last_Pool_Id_Json> {\n  const data = await apiPromise.query.nominationPools.lastPoolId();\n\n  return data.toJSON() as any as Nomination_Pools_Last_Pool_Id_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Max_Pool_Members_Json = number | null;\n\nexport async function maxPoolMembers(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Max_Pool_Members_Json> {\n  const data = await apiPromise.query.nominationPools.maxPoolMembers();\n\n  return data.toJSON() as any as Nomination_Pools_Max_Pool_Members_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Max_Pool_Members_Per_Pool_Json = number | null;\n\nexport async function maxPoolMembersPerPool(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Max_Pool_Members_Per_Pool_Json> {\n  const data = await apiPromise.query.nominationPools.maxPoolMembersPerPool();\n\n  return data.toJSON() as any as Nomination_Pools_Max_Pool_Members_Per_Pool_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Max_Pools_Json = number | null;\n\nexport async function maxPools(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Max_Pools_Json> {\n  const data = await apiPromise.query.nominationPools.maxPools();\n\n  return data.toJSON() as any as Nomination_Pools_Max_Pools_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Metadata_Json = string;\n\nexport async function metadata(\n  apiPromise: ApiPromise,\n  poolId: number\n): Promise<Nomination_Pools_Metadata_Json> {\n  const data = await apiPromise.query.nominationPools.metadata(poolId);\n\n  return data.toHuman() as unknown as Nomination_Pools_Metadata_Json;\n}\n\nexport type Nomination_Pools_Metadata_Entries = [number, string][];\n\nmetadata.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Metadata_Entries> {\n  const data = await apiPromise.query.nominationPools.metadata.entries();\n\n  const result: Nomination_Pools_Metadata_Entries = [];\n\n  data.forEach(([poolId, data]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([+poolId.toHuman()[0], data.toHuman()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Min_Create_Bond_Json = number | null;\n\nexport async function minCreateBond(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Min_Create_Bond_Json> {\n  const data = await apiPromise.query.nominationPools.minCreateBond();\n\n  return data.toJSON() as any as Nomination_Pools_Min_Create_Bond_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Min_Join_Bond_Json = number | null;\n\nexport async function minJoinBond(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Min_Join_Bond_Json> {\n  const data = await apiPromise.query.nominationPools.minJoinBond();\n\n  return data.toJSON() as any as Nomination_Pools_Min_Join_Bond_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport function palletVersionBase(palletName: string) {\n  return async function (apiPromise: ApiPromise) {\n    return (\n      await apiPromise.query[palletName].palletVersion()\n    ).toJSON() as unknown as number;\n  };\n}\n","import { palletVersionBase } from \"../helpers/palletVersionBase\";\n\nexport const palletVersion = palletVersionBase(\"nominationPools\");\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport { Nomination_Pools_Reverse_Pool_Id_Lookup_Entries } from \"./reversePoolIdLookup\";\n\nimport { BrokenNumberType } from \"../types/BrokenNumberType\";\n\nexport type Nomination_Pools_Pool_Members_Json = {\n  poolId: number;\n  points: number;\n  lastRecordedRewardCounter: BrokenNumberType;\n  unbondingEras: Record<string, BrokenNumberType>;\n} | null;\n\nexport async function poolMembers(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Nomination_Pools_Pool_Members_Json> {\n  const data = await apiPromise.query.nominationPools.poolMembers(address);\n\n  return data.toJSON() as any as Nomination_Pools_Pool_Members_Json;\n}\n\nexport type Nomination_Pools_Pool_Members_Entries = [\n  number,\n  Nomination_Pools_Pool_Members_Json\n][];\n\npoolMembers.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Pool_Members_Entries> {\n  const data = await apiPromise.query.nominationPools.poolMembers.entries();\n\n  const result: Nomination_Pools_Pool_Members_Entries = [];\n\n  data.forEach(([address, data]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([+address.toHuman()[0], data.toJSON()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Nomination_Pools_Reverse_Pool_Id_Lookup_Json = number | null; // always null\n\nexport async function reversePoolIdLookup(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Nomination_Pools_Reverse_Pool_Id_Lookup_Json> {\n  const data = await apiPromise.query.nominationPools.reversePoolIdLookup(\n    address\n  );\n\n  return data.toJSON() as any as Nomination_Pools_Reverse_Pool_Id_Lookup_Json;\n}\n\nexport type Nomination_Pools_Reverse_Pool_Id_Lookup_Entries = [\n  string,\n  number\n][];\n\nreversePoolIdLookup.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Reverse_Pool_Id_Lookup_Entries> {\n  const data =\n    await apiPromise.query.nominationPools.reversePoolIdLookup.entries();\n\n  const result: Nomination_Pools_Reverse_Pool_Id_Lookup_Entries = [];\n\n  data.forEach(([address, poolId]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([address.toHuman()[0], +poolId.toJSON()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport { Nomination_Pools_Sub_Pools_Storage_Entries } from \"./subPoolsStorage\";\n\nimport { BrokenNumberType } from \"../types/BrokenNumberType\";\n\nexport type Nomination_Pools_Reward_Pools_Json = {\n  lastRecordedRewardCounter: BrokenNumberType;\n  lastRecordedTotalPayouts: BrokenNumberType;\n  totalRewardsClaimed: BrokenNumberType;\n  totalCommissionPending: BrokenNumberType;\n  totalCommissionClaimed: BrokenNumberType;\n} | null;\n\nexport async function rewardPools(\n  apiPromise: ApiPromise,\n  poolId: number\n): Promise<Nomination_Pools_Reward_Pools_Json> {\n  const data = await apiPromise.query.nominationPools.rewardPools(poolId);\n\n  return data.toJSON() as any as Nomination_Pools_Reward_Pools_Json;\n}\n\nexport type Nomination_Pools_Reward_Pools_Entries = [\n  number,\n  Nomination_Pools_Reward_Pools_Json\n][];\n\nrewardPools.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Reward_Pools_Entries> {\n  const data = await apiPromise.query.nominationPools.rewardPools.entries();\n\n  const result: Nomination_Pools_Reward_Pools_Entries = [];\n\n  data.forEach(([pool, value]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([+pool.toHuman()[0], value.toJSON()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport { BrokenNumberType } from \"../types/BrokenNumberType\";\n\nexport type Nomination_Pools_Sub_Pools_Storage_Json = {\n  noEra: {\n    points: BrokenNumberType;\n    balance: BrokenNumberType;\n  };\n  withEra: Record<\n    number,\n    {\n      points: BrokenNumberType;\n      balance: BrokenNumberType;\n    }\n  >;\n} | null;\n\nexport async function subPoolsStorage(\n  apiPromise: ApiPromise,\n  poolId: number\n): Promise<Nomination_Pools_Sub_Pools_Storage_Json> {\n  const data = await apiPromise.query.nominationPools.subPoolsStorage(poolId);\n\n  return data.toJSON() as any as Nomination_Pools_Sub_Pools_Storage_Json;\n}\n\nexport type Nomination_Pools_Sub_Pools_Storage_Entries = [\n  number,\n  Nomination_Pools_Sub_Pools_Storage_Json\n][];\n\nsubPoolsStorage.entries = async function (\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Sub_Pools_Storage_Entries> {\n  const data = await apiPromise.query.nominationPools.subPoolsStorage.entries();\n\n  const result: Nomination_Pools_Sub_Pools_Storage_Entries = [];\n\n  data.forEach(([pool, value]) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    result.push([+pool.toHuman()[0], value.toJSON()]);\n  });\n\n  return result;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport { BrokenNumberType } from \"../types/BrokenNumberType\";\n\nexport type Nomination_Pools_Global_Max_Commission_Json = BrokenNumberType;\n\nexport async function totalValueLocked(\n  apiPromise: ApiPromise\n): Promise<Nomination_Pools_Global_Max_Commission_Json> {\n  const data = await apiPromise.query.nominationPools.totalValueLocked();\n\n  return data.toJSON() as any as Nomination_Pools_Global_Max_Commission_Json;\n}\n","export { proxies } from \"./proxies\";\nexport { palletVersion } from \"./palletVersion\";\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Proxy_Proxies_Json = [\n  {\n    delegate: string;\n    proxyType: \"Any\" | \"NonTransfer\" | \"Governance\" | \"Staking\";\n    delay: number;\n  }[],\n  number\n];\n\nexport async function proxies(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Proxy_Proxies_Json> {\n  const proxies = await apiPromise.query.proxy.proxies(address);\n\n  return proxies as unknown as Proxy_Proxies_Json;\n}\n","import { palletVersionBase } from \"../helpers/palletVersionBase\";\n\nexport const palletVersion = palletVersionBase(\"proxy\");\n","export { account } from \"./account\";\nexport { accountNextIndex } from \"./accountNextIndex\";\nexport { palletVersion } from \"./palletVersion\";\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Staking_Account_Json = {\n  nonce: number;\n  consumers: number;\n  providers: number;\n  sufficients: number;\n  data: {\n    free: string;\n    reserved: number;\n    frozen: string;\n    flags: string;\n  };\n};\n\nexport async function account(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Staking_Account_Json | null> {\n  const data = await apiPromise.query.system.account(address);\n\n  return data.toJSON() as unknown as Staking_Account_Json | null;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport async function accountNextIndex(\n  apiPromise: ApiPromise,\n  account: string\n): Promise<number> {\n  const nonce = await apiPromise.rpc.system.accountNextIndex(account);\n\n  return parseInt(nonce.toString(), 10);\n}\n","import { palletVersionBase } from \"../helpers/palletVersionBase\";\n\nexport const palletVersion = palletVersionBase(\"system\");\n","export { activeEra } from \"./activeEra\";\nexport { bonded } from \"./bonded\";\nexport { erasRewardPoints } from \"./erasRewardPoints\";\nexport { erasValidatorReward } from \"./erasValidatorReward\";\nexport { ledger } from \"./ledger\";\nexport { nominators } from \"./nominators\";\nexport { palletVersion } from \"./palletVersion\";\nexport { validators } from \"./validators\";\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Staking_Active_Era_Json = {\n  index: number;\n  start: number;\n};\n\nexport const activeEra = async (\n  api: ApiPromise\n): Promise<Staking_Active_Era_Json> => {\n  const era = (await api.query.staking.activeEra()).toJSON();\n  return era as unknown as Staking_Active_Era_Json;\n};\n","import { ApiPromise } from \"@polkadot/api\";\nimport { isAddress } from \"@polkadot/util-crypto\";\n\nexport const bonded = async (\n  api: ApiPromise,\n  address: string\n): Promise<string | null> => {\n  if (!isAddress(address)) {\n    throw new Error(`${address} is not an address`);\n  }\n\n  const response = await api.query.staking.bonded(address);\n\n  if (response && response.toString()) {\n    return response.toString();\n  }\n\n  return null;\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Staking_Eras_Reward_Points_Json = {\n  total: number;\n  individual: {\n    [validator: string]: number;\n  };\n};\nexport async function erasRewardPoints(\n  apiPromise: ApiPromise,\n  era: number\n): Promise<Staking_Eras_Reward_Points_Json> {\n  if (era < 0) {\n    throw new Error(`Provided Era: ${era} is less than zero`);\n  }\n\n  const points = await apiPromise.query.staking.erasRewardPoints(era);\n  return points.toJSON() as unknown as Staking_Eras_Reward_Points_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport async function erasValidatorReward(\n  apiPromise: ApiPromise,\n  era: number\n): Promise<number | null> {\n  if (era < 0) {\n    throw new Error(`Provided Era: ${era} is less than zero`);\n  }\n\n  const points = await apiPromise.query.staking.erasValidatorReward(era);\n  return points.toJSON() as unknown as number | null;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Staking_Ledger_Json = {\n  stash: string;\n  total: number;\n  active: number;\n  unlocking: string[];\n  legacyClaimedRewards: number[];\n};\n\nexport async function ledger(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Staking_Ledger_Json | null> {\n  const data = await apiPromise.query.staking.ledger(address);\n\n  return data.toJSON() as unknown as Staking_Ledger_Json | null;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Staking_Nominators_Json = {\n  targets: string[];\n  submittedIn: number;\n  suppressed: boolean;\n};\n\nexport async function nominators(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Staking_Nominators_Json> {\n  const result = await apiPromise.query.staking.nominators(address);\n\n  return result.toJSON() as unknown as Staking_Nominators_Json;\n}\n","import { palletVersionBase } from \"../helpers/palletVersionBase\";\n\nexport const palletVersion = palletVersionBase(\"staking\");\n","import { ApiPromise } from \"@polkadot/api\";\n\nexport type Staking_Validators_Json = {\n  commission: number;\n  blocked: boolean;\n};\n\nexport async function validators(\n  apiPromise: ApiPromise,\n  validatorAddress: string\n): Promise<Staking_Validators_Json> {\n  const result = await apiPromise.query.staking.validators(validatorAddress);\n\n  return result.toJSON() as unknown as Staking_Validators_Json;\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport * as api from \"../api\";\nimport { Staking_Ledger_Json } from \"../api/query/staking/ledger\";\n\nexport async function getLedgerData(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Staking_Ledger_Json | null> {\n  return api.query.staking.ledger(apiPromise, address);\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport * as api from \"../api\";\nimport { Staking_Account_Json } from \"../api/query/system/account\";\n\nexport async function getAccountData(\n  apiPromise: ApiPromise,\n  address: string\n): Promise<Staking_Account_Json | null> {\n  return api.query.system.account(apiPromise, address);\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport * as api from \"../api\";\n\nexport const getController = async (\n  apiPromise: ApiPromise,\n  address: string\n): Promise<string | null> => {\n  return api.query.staking.bonded(apiPromise, address);\n};\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport * as api from \"../api\";\n\ninterface Bump {\n  (): number;\n}\n\nexport async function getAccountNonce(\n  apiPromise: ApiPromise,\n  account: string\n): Promise<number> {\n  return api.query.system.accountNextIndex(apiPromise, account);\n}\n\nexport async function getAccountNonceAndBump(\n  apiPromise: ApiPromise,\n  account: string\n): Promise<[number, Bump]> {\n  const nonce = await getAccountNonce(apiPromise, account);\n\n  let i = 0;\n  return [\n    nonce,\n    () => {\n      i++;\n      return nonce + i;\n    },\n  ];\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport * as api from \"../api\";\nimport { Staking_Eras_Reward_Points_Json } from \"../api/query/staking/erasRewardPoints\";\n\nexport async function getErasRewardPoints(\n  apiPromise: ApiPromise,\n  era: number\n): Promise<Staking_Eras_Reward_Points_Json> {\n  return api.query.staking.erasRewardPoints(apiPromise, era);\n}\n","import { Hash } from \"@polkadot/types/interfaces\";\n\ntype LinkType =\n  | \"account\"\n  | \"address\"\n  | \"a\"\n  | \"extrinsic\"\n  | \"transaction\"\n  | \"t\"\n  | \"validator\"\n  | \"v\";\n\nconst linkType: {\n  [key in LinkType]: string;\n} = {\n  account: \"account\",\n  address: \"account\",\n  a: \"account\",\n  extrinsic: \"extrinsic\",\n  transaction: \"extrinsic\",\n  t: \"extrinsic\",\n  validator: \"validator\",\n  v: \"validator\",\n};\n\nexport function polkadotExplorerUrl(\n  networkName: string,\n  domain = \"subscan.io\"\n) {\n  return function (type: LinkType, addressOrHash: string | Hash): string {\n    const value =\n      typeof addressOrHash === \"string\"\n        ? addressOrHash\n        : addressOrHash.toHuman();\n\n    return `https://${networkName.toLowerCase()}.${domain}/${\n      linkType[type]\n    }/${value}`;\n  };\n}\n","import { ApiPromise } from \"@polkadot/api\";\n\nimport * as api from \"../api\";\nimport { Staking_Active_Era_Json } from \"../api/query/staking/activeEra\";\n\nexport const getActiveEra = async (\n  apiPromise: ApiPromise\n): Promise<Staking_Active_Era_Json> => {\n  return api.query.staking.activeEra(apiPromise);\n};\n","export { getLedgerData } from \"./account/getLedgerData\";\nexport { getAccountData } from \"./account/getAccountData\";\nexport { getController } from \"./staking/getController\";\nexport {\n  getAccountNonce,\n  getAccountNonceAndBump,\n} from \"./account/getAccountNonce\";\nexport { getErasRewardPoints } from \"./staking/getErasRewardPoints\";\nexport { polkadotExplorerUrl } from \"./common/polkadotExplorerUrl\";\n\nimport * as _getActiveEra from \"./staking/getActiveEra\";\nexport const getActiveEra = _getActiveEra.getActiveEra;\nexport const getCurrentEra = _getActiveEra.getActiveEra;\n\nexport * as api from \"./api\";\n"],"mappings":"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","names":["data","data","data","data","palletVersion","proxies","palletVersion","palletVersion","account","palletVersion","palletVersion","palletVersion","account","getActiveEra"]}